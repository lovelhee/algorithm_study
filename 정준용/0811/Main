// 백준 4963
// 가로 세로 안맞춰서 고생함
// 앞으로는 무조건 맞추기를 빌면서 
// 커밋을 올립니다.

import java.util.*;

public class Main {
	static int map[][];
	static boolean [][] visited;
	static int N;
	static int M;
	static int Icount;
	static int dx[] = {-1 , 0, 1, -1 ,  1, -1 , 0, 1};
	static int dy[] = {1, 1, 1, 0, 0, -1, -1, -1};
	
	static void BFS(int x, int y) {
		Queue<int[]> q = new LinkedList<int[]>();
		visited[x][y] = true;
		q.add(new int[] {x, y});
		
		while(!q.isEmpty()) {
			int[] cur = q.poll();
			int curX = cur[0];
			int curY = cur[1];
			
			for(int i = 0; i < 8; i++) {
				int nx = curX + dx[i];
				int ny = curY + dy[i];
				if(nx <0 || ny < 0 || nx >= M || ny >= N)
					continue;
				if(!visited[nx][ny] && map[nx][ny] == 1) {
					q.add(new int[] {nx, ny});
					visited[nx][ny] = true;
				}
			}
		}
		
		
	}
	
	public static void main(String[] args) {
		Scanner sc= new Scanner(System.in);
		
		int a = 0;
		while(true) {
			N = sc.nextInt();
			M = sc.nextInt();
			Icount = 0;
			map = new int[M][N];
			visited = new boolean[M][N];
			
			if(N == 0 && M == 0 ) {
				break;
			}
			
			for(int i = 0; i < M; i++) {
				for(int j = 0 ; j < N ; j++) {
					map[i][j] = sc.nextInt();
				}
			}
			
			
			
			for(int i = 0 ; i < M ; i++) {
				for(int j= 0 ; j< N ; j++) {
					if(!visited[i][j] && map[i][j] == 1) {
						BFS(i, j);
						Icount++;
					}
				}
			}
			System.out.println(Icount);
			a++;
		}
	}
}
